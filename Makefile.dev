LIB := lib
TMP := tmp

all: run_main

create:
	@if [ -z "$(TARGET)" ]; then\
		echo "Error": TARGET is not set;\
		exit 1;\
	fi
	@cp -r $(LIB)/$(TMP) $(LIB)/$(TARGET)

clean:
	flutter clean
	flutter pub get

format:
	dart fix --apply
	dart format .
	flutter analyze .

gen:
	dart run build_runner build

gen_all:
	dart run build_runner build -d

logo_gen:
	dart run flutter_launcher_icons:main

run_main:
	flutter pub get
	flutter run -t lib/main/main.dart

run_go_router_builder: gen
	flutter pub get
	flutter run -t lib/go_router_builder/main.dart

run_hooks_riverpod:
	flutter pub get
	flutter run -t lib/hooks_riverpod/main.dart


run_go_router:
	flutter pub get
	flutter run -t lib/go_router/main.dart
        
add_launch_config:
	@if ! command -v jq &> /dev/null; then \
		echo "Error: jq is not installed"; \
		exit 1; \
	fi
	@if [ -z "$(TARGET)" ]; then \
		echo "Error: TARGET is not set"; \
		exit 1; \
	fi
	@jq '.configurations += [{"name": "flutter_hub ($(TARGET))", "request": "launch", "type": "dart", "program": "lib/$(TARGET)/main.dart"}]' .vscode/launch.json > .vscode/launch.json.tmp && mv .vscode/launch.json.tmp .vscode/launch.json

.PHONY: clean run_dev format gen gen_all logo_gen run_main \
				run_go_router_builder run_hooks_riverpod create
